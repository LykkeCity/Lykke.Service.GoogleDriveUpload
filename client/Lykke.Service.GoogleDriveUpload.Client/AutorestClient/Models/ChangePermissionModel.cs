// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.GoogleDriveUpload.Client.AutorestClient.Models
{
    using Lykke.Service;
    using Lykke.Service.GoogleDriveUpload;
    using Lykke.Service.GoogleDriveUpload.Client;
    using Lykke.Service.GoogleDriveUpload.Client.AutorestClient;
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ChangePermissionModel
    {
        /// <summary>
        /// Initializes a new instance of the ChangePermissionModel class.
        /// </summary>
        public ChangePermissionModel()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ChangePermissionModel class.
        /// </summary>
        /// <param name="role">Possible values include: 'Unknown', 'Organizer',
        /// 'Owner', 'Writer', 'Commenter', 'Reader'</param>
        public ChangePermissionModel(string fileId, string emailAddress, Role role)
        {
            FileId = fileId;
            EmailAddress = emailAddress;
            Role = role;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FileId")]
        public string FileId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EmailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'Organizer',
        /// 'Owner', 'Writer', 'Commenter', 'Reader'
        /// </summary>
        [JsonProperty(PropertyName = "Role")]
        public Role Role { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FileId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FileId");
            }
            if (EmailAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EmailAddress");
            }
        }
    }
}
